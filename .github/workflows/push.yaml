name: Build and Push Docker Image on Push

on:
    workflow_dispatch:

env:
    GITHUB_REGISTRY: ghcr.io
    DOCKER_IMAGE_NAME: camunda-cockpit-keycloak
    GITHUB_NAMESPACE: ritense

jobs:
    build:
        runs-on: ubuntu-latest
        outputs:
            tagToDeploy: ${{ steps.prep.outputs.image_tag }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: 'Generate unique docker tag to deploy'
              id: prep
              run: |
                  branch=${GITHUB_REF##*/}
                  sha=${GITHUB_SHA::8}
                  ts=$(date +'%Y%m%d%H%M')
                  echo "image_tag=${branch}-${ts}-${sha}" >> "$GITHUB_OUTPUT"

    deploy:
      runs-on: ubuntu-latest
      needs: [ build ]
      permissions:
          contents: read
          packages: write
          id-token: write
      steps:
          -   name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 1
          -   name: Install Cosign
              uses: sigstore/cosign-installer@v3.5.0
          -   name: Set up QEMU
              uses: docker/setup-qemu-action@v3
          -   name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
          -   name: 'Login to github packages'
              uses: docker/login-action@v1
              with:
                  registry: ${{ env.GITHUB_REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
          -   id: docker_meta
              uses: docker/metadata-action@v4.4.0
              with:
                  images: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_NAMESPACE }}/${{ env.DOCKER_IMAGE_NAME }}
                  tags: type=raw,value=${{ needs.build.outputs.tagToDeploy }}
          -   name: Build and push Docker image
              uses: docker/build-push-action@v6
              id: build-and-push
              with:
                  file: Dockerfile
                  platforms: linux/arm64,linux/amd64
                  context: .
                  push: true
                  tags: ${{ steps.docker_meta.outputs.tags }}
          -   name: Sign the images with GitHub OIDC Token
              env:
                  DIGEST: ${{ steps.build-and-push.outputs.digest }}
                  TAGS: ${{ steps.docker_meta.outputs.tags }}
              run: |
                  images=""
                  for tag in ${TAGS}; do
                    images+="${tag}@${DIGEST} "
                  done
                  cosign sign --yes ${images}
          -   name: Verify the images
              run: |
                  branch=${GITHUB_REF##*/}
                  cosign verify ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_NAMESPACE }}/${{ env.DOCKER_IMAGE_NAME }}:${{ needs.build.outputs.tagToDeploy }} \
                     --certificate-identity https://github.com/${{ env.GITHUB_NAMESPACE }}/${{ env.DOCKER_IMAGE_NAME }}/.github/workflows/push.yaml@refs/heads/${branch} \
                     --certificate-oidc-issuer https://token.actions.githubusercontent.com | jq
